{"version":3,"sources":["assets/image/my_photo.png","components/Header.tsx","components/Instagram.tsx","components/Profile.tsx","components/TimelineContents.tsx","components/Timeline.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Wrap","styled","div","TitleWrap","Header","AppBar","position","color","Toolbar","Grid","container","direction","justify","alignItems","href","IconButton","aria-label","Instagram","url","maxWidth","hideCaption","containerTagName","protocol","injectScript","onLoading","onSuccess","onAfterRender","onFailure","StyledAvatar","Avatar","TextWrap","MainTitle","Profile","alt","src","my_photo","Title","Text","ContentsWrap","StyledChip","Chip","TimelineContents","title","text","skill","listItems","map","item","i","label","key","Timeline","GlobalStyle","createGlobalStyle","StyledTypography","Typography","ContactWrap","DMText","App","variant","display","gutterBottom","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7dec420c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/my_photo.215286db.png\";","import React from 'react';\nimport styled from 'styled-components';\n\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nconst Wrap = styled.div`\n  font-size: 20;\n`;\n\nconst TitleWrap = styled.div`\n  font-size: 24px;\n  font-weight: bold;\n  font-family: 'Vollkorn';\n`;\n\nconst Header: React.FC = () => {\n  return (\n    <Wrap>\n      <AppBar position=\"static\" color=\"default\">\n        <Toolbar>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-around\"\n            alignItems=\"center\"\n          >\n            <TitleWrap>Aki Yamada</TitleWrap>\n            <div>\n              <a href=\"https://www.instagram.com/akistagram_jp/\">\n                <IconButton aria-label=\"delete\" color=\"default\">\n                  <InstagramIcon />\n                </IconButton>\n              </a>\n              <a href=\"https://twitter.com/akiy_8\">\n                <IconButton aria-label=\"delete\" color=\"default\">\n                  <TwitterIcon />\n                </IconButton>\n              </a>\n              <a href=\"https://github.com/akkie8\">\n                <IconButton aria-label=\"delete\" color=\"default\">\n                  <GitHubIcon />\n                </IconButton>\n              </a>\n            </div>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    </Wrap>\n  );\n};\nexport default Header;\n","import React from 'react';\nimport styled from 'styled-components';\nimport InstagramEmbed from 'react-instagram-embed';\n\nconst Wrap = styled.div`\n  margin-bottom: 50px;\n  margin: auto;\n`;\n\nconst Instagram: React.FC = () => {\n  return (\n    <Wrap>\n      <InstagramEmbed\n        url=\"https://www.instagram.com/p/B862xVgpWpv/\"\n        maxWidth={200}\n        hideCaption={true}\n        containerTagName=\"div\"\n        protocol=\"\"\n        injectScript\n        onLoading={() => {}}\n        onSuccess={() => {}}\n        onAfterRender={() => {}}\n        onFailure={() => {}}\n      />\n    </Wrap>\n  );\n};\nexport default Instagram;\n","import React from 'react';\nimport styled from 'styled-components';\nimport my_photo from '../assets/image/my_photo.png';\nimport Avatar from '@material-ui/core/Avatar';\nimport Instagram from '../components/Instagram';\nimport Grid from '@material-ui/core/Grid';\n\nconst Wrap = styled.div`\n  max-width: 700px;\n  margin: 50px auto;\n`;\n\nconst StyledAvatar = styled(Avatar)`\n  && {\n    margin: 0 auto 30px;\n    width: 200px;\n    height: 200px;\n  }\n`;\n\nconst TextWrap = styled.div`\n  width: 300px;\n  font-size: 14px;\n  font-weight: bold;\n  margin: auto;\n  text-align: center;\n  margin-bottom: 10px;\n`;\n\nconst TitleWrap = styled.div`\n  font-size: 20px;\n  margin-bottom: 10px;\n  font-weight: bold;\n  text-align: center;\n  font-family: 'Vollkorn';\n`;\n\nconst MainTitle = styled.div`\n  width: 250px;\n  text-align: center;\n  font-size: 30px;\n  margin: 0 auto 30px;\n  color: #515e64;\n  border-bottom: solid 4px #515e64;\n  font-family: 'Vollkorn';\n`;\n\nconst Profile: React.FC = () => {\n  return (\n    <Wrap>\n      <MainTitle>About me</MainTitle>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-evenly\"\n        alignItems=\"center\"\n      >\n        <div>\n          <StyledAvatar alt=\"Aki Yamada\" src={my_photo} />\n          <TitleWrap>Aki Yamada</TitleWrap>\n          <TextWrap>\n            1990生まれ / フリーランス<br/>\n            フロントエンドエンジニア<br />\n            デジタルノマド / 海外在住\n          </TextWrap>\n          <TextWrap>\n            生産性の高いコミニケーションを意識し<br/>\n            業務を最後まで逃げずに遂行致します。\n          </TextWrap>\n        </div>\n        <Instagram />\n      </Grid>\n    </Wrap>\n  );\n};\nexport default Profile;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Chip from '@material-ui/core/Chip';\n\ntype Props = {\n  title: string\n  text: string\n  skill?: string[] | undefined\n}\n\nconst Wrap = styled.div`\n  margin: 0 auto 30px;\n  max-width: 500px;\n`;\n\nconst Title = styled.div`\n  background-color: rgba(0, 0, 0, 0.8);\n  font-size: 16px;\n  color: white;\n  padding: 2px 15px;\n  display: inline;\n`;\n\nconst Text = styled.div`\n  font-size: 16px;\n  margin-bottom: 10px;\n`;\n\nconst ContentsWrap = styled.div`\n  font-size: 16px;\n  border-left: 2px solid rgba(0, 0, 0, 0.8);\n  padding-left: 20px;\n  margin: 10px;\n`;\n\nconst StyledChip = styled(Chip)`\n  margin: 2px;\n  && {\n    background-color: #b6c3ae;\n  }\n`;\n\nconst TimelineContents: React.FC<Props> = ({ title, text, skill = [] }) => {\n\n  const listItems = skill.map((item, i) => (\n    <StyledChip label={item} key={i}/>\n  ));\n\n  return (\n    <Wrap>\n      <Title>{title}</Title>\n      <ContentsWrap>\n        <Text>{text}</Text>\n        {listItems}\n      </ContentsWrap>\n    </Wrap>\n  );\n};\nexport default TimelineContents;\n","import React from 'react';\nimport styled from 'styled-components';\nimport TimelineContents from '../components/TimelineContents';\n\nconst Wrap = styled.div`\n  margin-bottom: 50px;\n  padding: 20px;\n`;\n\nconst MainTitle = styled.div`\n  width: 250px;\n  text-align: center;\n  font-size: 30px;\n  margin: 0 auto 30px;\n  color: #515e64;\n  border-bottom: solid 4px #515e64;\n  font-family: 'Vollkorn';\n`;\n\nconst Timeline: React.FC = () => {\n  return (\n    <Wrap>\n      <MainTitle>Career and Skills</MainTitle>\n      <TimelineContents title=\"2015/05\" text=\"ネイリストからエンジニアに転職\" />\n      <TimelineContents\n        title=\"2015年05月〜（１社目）\"\n        text=\"ホームページ制作、検査装置開発、ツール系アプリ開発、ゲームアプリ開発\"\n        skill={['HTML', 'CSS', 'jQuery', 'JavaScript', 'C++', 'swift', 'VBA']}\n      />\n      <TimelineContents\n        title=\"2017年12月〜（２社目）\"\n        text=\"Facebook Instant Games 開発、LINE Account Connect 開発、ソーシャルゲーム運営\"\n        skill={[\n          'HTML5',\n          'Phaser.js',\n          'Riot.js',\n          'JavaScript',\n          'TypeScript',\n          'GitHub',\n          'Node.js',\n          'Unity',\n          'C#',\n        ]}\n      />\n      <TimelineContents\n        title=\"2018年12月〜（フリーランス）\"\n        text=\"クロスプラットフォーム開発、サイト制作、ワードプレス改修、システム開発、個人アプリ開発\"\n        skill={[\n          'JavaScript',\n          'TypeScript',\n          'Angular',\n          'React',\n          'Vue.js',\n          'GitHub',\n          'Firebase',\n          'Node.js',\n          'GraphQL',\n          'Flutter',\n          'Dart',\n        ]}\n      />\n    </Wrap>\n  );\n};\n\nexport default Timeline;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { createGlobalStyle } from 'styled-components';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nimport Header from './components/Header';\nimport Profile from './components/Profile';\nimport Timeline from './components/Timeline';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    position: relative;\n    color: #333333;\n    background-color: #ffffff;\n    font-size: 100%;\n    line-height: 1.7;\n    -webkit-text-size-adjust: 100%;\n    font-family: \"Sawarabi Gothic\";\n  }\n`;\n\nconst StyledTypography = styled(Typography)`\n  text-align: center;\n  margin: 0 auto 10px;\n  && {\n    font-family: 'Vollkorn';\n  }\n`;\n\nconst MainTitle = styled.div`\n  width: 250px;\n  text-align: center;\n  font-size: 30px;\n  margin: 0 auto 10px;\n  color: #515e64;\n  border-bottom: solid 4px #515e64;\n  font-family: 'Vollkorn';\n`;\n\nconst ContactWrap = styled.div`\n  text-align: center;\n  margin-bottom: 30px;\n`;\n\nconst DMText = styled.div`\n  width: 300px;\n  margin: auto;\n  font-size: 14px;\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Header />\n      <Profile />\n      <Timeline />\n      <MainTitle>Contact</MainTitle>\n      <ContactWrap>\n        <DMText>お仕事依頼・お問い合わせは 下記DMにて</DMText>\n        <a href=\"https://www.instagram.com/akistagram_jp/\">\n          <IconButton aria-label=\"delete\" color=\"default\">\n            <InstagramIcon />\n          </IconButton>\n        </a>\n        <a href=\"https://twitter.com/akiy_8\">\n          <IconButton aria-label=\"delete\" color=\"default\">\n            <TwitterIcon />\n          </IconButton>\n        </a>\n        <a href=\"https://github.com/akkie8\">\n          <IconButton aria-label=\"delete\" color=\"default\">\n            <GitHubIcon />\n          </IconButton>\n        </a>\n      </ContactWrap>\n      <StyledTypography variant=\"caption\" display=\"block\" gutterBottom>\n        &copy; 2020 Aki Yamada\n      </StyledTypography>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}